apiVersion: v1
kind: Namespace
metadata:
  name: nosecone
  labels:
    name: nosecone
    app: nosecone-bot
    environment: production
    managed-by: kubectl
  annotations:
    description: "Namespace for NoseCone Discord Bot and related services"
    contact: "admin@example.com"
    version: "1.0.0"

---
# Resource Quota for the namespace (optional)
apiVersion: v1
kind: ResourceQuota
metadata:
  name: nosecone-quota
  namespace: nosecone
spec:
  hard:
    # Compute resources
    requests.cpu: "2"
    requests.memory: 4Gi
    limits.cpu: "4"
    limits.memory: 8Gi
    
    # Storage resources
    requests.storage: 20Gi
    persistentvolumeclaims: "5"
    
    # Object counts
    pods: "10"
    services: "5"
    secrets: "10"
    configmaps: "10"
    deployments.apps: "5"
    replicasets.apps: "10"

---
# Network Policy for security (optional)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: nosecone-network-policy
  namespace: nosecone
spec:
  podSelector:
    matchLabels:
      app: nosecone-bot
  policyTypes:
  - Ingress
  - Egress
  
  # Ingress rules (who can connect to our pods)
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: TCP
      port: 3000  # Health check port
  
  # Egress rules (where our pods can connect)
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  
  # Allow HTTPS to Discord API
  - to: []
    ports:
    - protocol: TCP
      port: 443
  
  # Allow HTTP/HTTPS to n8n webhooks
  - to: []
    ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 443
  
  # Allow connection to Kubernetes API
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: TCP
      port: 443 