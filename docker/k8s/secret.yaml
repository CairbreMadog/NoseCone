# Kubernetes Secret for NoseCone Bot
# WARNING: This is a template file. Never commit actual secrets to version control!
# 
# To create the actual secret:
# 1. Copy this file to secret-actual.yaml (which should be in .gitignore)
# 2. Replace the base64 encoded placeholder values with your actual encoded secrets
# 3. Apply with: kubectl apply -f secret-actual.yaml
#
# To encode secrets:
# echo -n "your_secret_value" | base64

apiVersion: v1
kind: Secret
metadata:
  name: nosecone-secrets
  namespace: nosecone
  labels:
    app: nosecone-bot
    component: secrets
type: Opaque
data:
  # Discord Configuration (base64 encoded)
  # Replace these placeholder values with your actual base64 encoded secrets
  DISCORD_BOT_TOKEN: "eW91cl9ib3RfdG9rZW5faGVyZQ=="  # your_bot_token_here
  DISCORD_CLIENT_ID: "eW91cl9jbGllbnRfaWRfaGVyZQ==" # your_client_id_here
  DISCORD_CLIENT_SECRET: "eW91cl9jbGllbnRfc2VjcmV0X2hlcmU=" # your_client_secret_here (optional)
  
  # n8n Configuration (base64 encoded)
  N8N_WEBHOOK_URL: "aHR0cHM6Ly95b3VyLW44bi1pbnN0YW5jZS5jb20vd2ViaG9vay9kaXNjb3JkLWJvdA==" # https://your-n8n-instance.com/webhook/discord-bot
  N8N_WEBHOOK_TOKEN: "b3B0aW9uYWxfd2ViaG9va19hdXRoZW50aWNhdGlvbl90b2tlbg==" # optional_webhook_authentication_token (optional)
  N8N_SECONDARY_WEBHOOK: "aHR0cHM6Ly95b3VyLW44bi1pbnN0YW5jZS5jb20vd2ViaG9vay9kaXNjb3JkLWNvbW1hbmRz" # https://your-n8n-instance.com/webhook/discord-commands (optional)

---
# Example of how to create the secret using command line:
# 
# kubectl create secret generic nosecone-secrets \
#   --namespace=nosecone \
#   --from-literal=DISCORD_BOT_TOKEN="your_actual_bot_token" \
#   --from-literal=DISCORD_CLIENT_ID="your_actual_client_id" \
#   --from-literal=N8N_WEBHOOK_URL="https://your-n8n-instance.com/webhook/discord-bot" \
#   --from-literal=N8N_WEBHOOK_TOKEN="your_webhook_token" \
#   --from-literal=N8N_SECONDARY_WEBHOOK="https://your-n8n-instance.com/webhook/discord-commands"

# Or using a file-based approach:
# 1. Create a .env file with your secrets
# 2. kubectl create secret generic nosecone-secrets --from-env-file=.env --namespace=nosecone

# To view the secret (for debugging):
# kubectl get secret nosecone-secrets -o yaml --namespace=nosecone

# To decode a secret value:
# kubectl get secret nosecone-secrets -o jsonpath="{.data.DISCORD_BOT_TOKEN}" --namespace=nosecone | base64 --decode 